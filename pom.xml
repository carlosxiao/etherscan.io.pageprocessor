<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.cc</groupId>
	<artifactId>etherscan.io</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>ether-contract-processor</name>
	<description>Demo project for Spring Boot</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.13.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.16.22</version>
		</dependency>

		<dependency>
			<groupId>us.codecraft</groupId>
			<artifactId>webmagic-core</artifactId>
			<version>0.7.3</version>
			<exclusions>
				<exclusion>
					<artifactId>slf4j-log4j12</artifactId>
					<groupId>org.slf4j</groupId>
				</exclusion>
				<exclusion>
					<artifactId>slf4j-log4j12</artifactId>
					<groupId>org.slf4j</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>us.codecraft</groupId>
			<artifactId>webmagic-extension</artifactId>
			<version>0.7.3</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency>

		<!-- 数据源 -->
		<dependency>
			<groupId>com.zaxxer</groupId>
			<artifactId>HikariCP</artifactId>
			<version>2.6.0</version>
		</dependency>
		<dependency>
			<groupId>com.baomidou</groupId>
			<artifactId>mybatisplus-spring-boot-starter</artifactId>
			<version>1.0.5</version>
		</dependency>
		<dependency>
			<groupId>com.baomidou</groupId>
			<artifactId>mybatis-plus</artifactId>
			<version>2.1.6</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.velocity</groupId>
			<artifactId>velocity</artifactId>
			<version>1.7</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-pool2</artifactId>
			<version>2.4.2</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.9.10.5</version>
		</dependency>
		<dependency>
			<groupId>net.java.dev.jna</groupId>
			<artifactId>jna</artifactId>
			<version>4.1.0</version>
		</dependency>
		<dependency>
			<groupId>com.niulib</groupId>
			<artifactId>aisdk-noise</artifactId>
			<version>1.0.0</version>
		</dependency>

		<dependency>
			<groupId>net.sourceforge.tess4j</groupId>
			<artifactId>tess4j</artifactId>
			<version>2.0.1</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>tar-build</id>
			<build>
				<finalName>${project.artifactId}</finalName>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>2.5.3</version>
						<executions>
							<execution>
								<id>make-zip</id>
								<!-- 绑定到package生命周期阶段上 -->
								<phase>package</phase>
								<goals>
									<!-- 绑定到package生命周期阶段上 -->
									<goal>single</goal>
								</goals>
								<configuration>
									<descriptors> <!--描述文件路径 -->
										<descriptor>src/main/resources/assembly.xml</descriptor>
									</descriptors>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>assemble</id>
			<build>
				<plugins>
					<!-- mvn -Passemble clean package appassembler:assemble -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>appassembler-maven-plugin</artifactId>
						<version>2.0.0</version>
						<configuration>
							<!-- 生成linux, windows两种平台的执行脚本 -->
							<platforms>
								<platform>unix</platform>
								<platform>windows</platform>
							</platforms>
							<!-- 包存放的根目录 -->
							<assembleDirectory>${project.build.directory}/${project.artifactId}</assembleDirectory>
							<!-- 打包的jar，以及maven依赖的jar存放目录 -->
							<repositoryName>lib</repositoryName>
							<!-- lib目录中jar的存放规则，默认是${groupId}/${artifactId}的目录格式，flat表示直接把jar放到lib目录 -->
							<!-- 可执行脚本的存放目录 -->
							<binFolder>bin</binFolder>
							<!-- 配置文件的存放目录 -->
							<configurationDirectory>conf</configurationDirectory>
							<!-- 拷贝配置文件到上面的目录中 -->
							<copyConfigurationDirectory>true</copyConfigurationDirectory>
							<!-- 从哪里拷贝配置文件 (默认src/main/config) -->
							<configurationSourceDirectory>src/main/resources</configurationSourceDirectory>
							<repositoryLayout>flat</repositoryLayout>
							<encoding>UTF-8</encoding>
							<logsDirectory>logs</logsDirectory>
							<tempDirectory>tmp</tempDirectory>
							<programs>
								<program>
									<!-- 启动类 -->
									<mainClass>com.cc.etherscan.io.EtherContractProcessorApplication</mainClass>
									<jvmSettings>
										<extraArguments>
											<extraArgument>-server</extraArgument>
											<extraArgument>-Xmx1G</extraArgument>
											<extraArgument>-Xms1G</extraArgument>
										</extraArguments>
									</jvmSettings>
								</program>
							</programs>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>generate-daemons</id>
			<build>
				<plugins>
					<!-- mvn -Pgenerate-daemons clean package appassembler:generate-daemons -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>appassembler-maven-plugin</artifactId>
						<version>2.0.0</version>
						<configuration>
							<!-- 根目录 -->
							<assembleDirectory>${project.build.directory}/${project.name}</assembleDirectory>
							<!-- 打包的jar，以及maven依赖的jar存放目录 -->
							<repositoryName>lib</repositoryName>
							<!-- 可执行脚本的存放目录 -->
							<binFolder>bin</binFolder>
							<!-- 配置文件的存放目录 -->
							<configurationDirectory>conf</configurationDirectory>
							<!-- 拷贝配置文件到上面的目录中 -->
							<copyConfigurationDirectory>true</copyConfigurationDirectory>
							<!-- 从哪里拷贝配置文件 (默认src/main/config) -->
							<configurationSourceDirectory>src/main/resources</configurationSourceDirectory>
							<!-- lib目录中jar的存放规则，默认是${groupId}/${artifactId}的目录格式，flat表示直接把jar放到lib目录 -->
							<repositoryLayout>flat</repositoryLayout>
							<encoding>UTF-8</encoding>
							<logsDirectory>logs</logsDirectory>
							<tempDirectory>tmp</tempDirectory>
							<daemons>
								<daemon>
									<mainClass>com.cc.etherscan.io.EtherContractProcessorApplication</mainClass>
									<platforms>
										<platform>jsw</platform>
									</platforms>
									<generatorConfigurations>
										<generatorConfiguration>
											<generator>jsw</generator>
											<includes>
												<include>linux-x86-32</include>
												<include>linux-x86-64</include>
												<include>windows-x86-32</include>
												<include>windows-x86-64</include>
											</includes>
											<configuration>
												<property>
													<name>configuration.directory.in.classpath.first</name>
													<value>conf</value>
												</property>
												<property>
													<name>wrapper.ping.timeout</name>
													<value>120</value>
												</property>
												<property>
													<name>set.default.REPO_DIR</name>
													<value>lib</value>
												</property>
												<property>
													<name>wrapper.logfile</name>
													<value>logs/wrapper.log</value>
												</property>
											</configuration>
										</generatorConfiguration>
									</generatorConfigurations>
									<jvmSettings>
										<!-- jvm参数 -->
										<systemProperties>
											<systemProperty>com.sun.management.jmxremote</systemProperty>
											<systemProperty>com.sun.management.jmxremote.port=1984</systemProperty>
											<systemProperty>com.sun.management.jmxremote.authenticate=false</systemProperty>
											<systemProperty>com.sun.management.jmxremote.ssl=false</systemProperty>
										</systemProperties>
									</jvmSettings>
								</daemon>
							</daemons>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>


</project>
